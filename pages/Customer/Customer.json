{
  "unpublishedPage": {
    "name": "Customer",
    "slug": "customer",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 4896,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 780,
          "containerStyle": "none",
          "snapRows": 124,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 89,
          "minHeight": 1292,
          "dynamicTriggerPathList": [],
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "Customer_s3_read_customer_document",
              "name": "s3_read_customer_document",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [
                "this.params.document_type",
                "this.params.document_name",
                "this.params.customer_id"
              ],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "Customer_js_utils.get_all_cus_with_pfp",
              "name": "js_utils.get_all_cus_with_pfp",
              "collectionId": "Customer_js_utils",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  const customers = await sql_get_all_cus_with_pfp.run({\n    \"limit\": customers_table.pageSize,\n    \"offset\": customers_table.pageOffset\n  });\n  const mapped_customers = await Promise.all(customers.map(async customer => {\n    if (!(customer.document_type && customer.document_name)) {\n      customer.pfp = null;\n      return customer;\n    }\n    try {\n      await s3_read_customer_document.run({\n        \"customer_id\": 1,\n        \"document_type\": \"qid\",\n        \"document_name\": \"front.jpg\"\n      });\n      customer.pfp = s3_read_customer_document.data.fileData;\n      return customer;\n    } catch {\n      customer.pfp = null;\n      return customer;\n    }\n  }));\n  return mapped_customers;\n}"
              ],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "Customer_sql_get_active_cus_no",
              "name": "sql_get_active_cus_no",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "Customer_sql_get_cus_no",
              "name": "sql_get_cus_no",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "Customer",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "gitSyncId": "6675df3df6b08f7df4ca1fbd_5cfb03b8-f8e3-41f5-83d0-39650c62670f"
}